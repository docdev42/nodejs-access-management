// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String   @id @default(uuid())
  email       String   @unique
  name        String
  password    String
  birthday    DateTime?
  approved    Boolean @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  lastLoginAt DateTime?

  // Relationships
  permissions UserPermission[]

  @@map("users")
}

model Permission {
  id          String   @id @default(uuid())
  name        String   @unique
  slug        String   @unique
  description String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relationships
  users UserPermission[]

  @@map("permissions")
}

model UserPermission {
  id           String   @id @default(uuid())
  expiresAt    DateTime
  isRevoked    Boolean  @default(false)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  // Foreign keys
  userId       String
  permissionId String

  // Relationships
  user         User       @relation(fields: [userId], references: [id], onDelete: Cascade)
  permission   Permission @relation(fields: [permissionId], references: [id], onDelete: Cascade)

  @@unique([userId, permissionId, expiresAt, isRevoked])
  @@index([userId])
  @@index([permissionId])
  @@index([expiresAt])
  @@index([isRevoked])
  @@map("user_permissions")
}